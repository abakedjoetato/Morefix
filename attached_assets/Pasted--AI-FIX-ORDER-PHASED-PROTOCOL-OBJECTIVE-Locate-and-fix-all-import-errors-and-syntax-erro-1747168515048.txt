==== AI FIX ORDER — PHASED PROTOCOL ====
OBJECTIVE: Locate and fix all import errors and syntax errors across the entire Discord bot codebase. Comply fully with the Claude Opus Engineering Bible.

YOU MUST OPERATE UNDER THE FOLLOWING BINDING RULES:
- No monkey patches, temporary bypasses, or try/except suppressions (Rule 6)
- No modification of any business logic, command behavior, or function purpose (Rule 3)
- No addition of new files, modules, or refactors unless pre-approved (Rule 4)
- No external dependencies, web servers, or non-Python-native layers (Rule 7)
- Only fix syntax-level issues: unresolved symbols, miswritten imports, broken declarations, missing colons/parentheses, etc.
- You must NOT fix or patch runtime logic, premium logic, or command flow.

==== PHASE 1: FULL AUDIT ONLY ====
Scan the full codebase for the following:
1. All import errors — broken references, circular imports, outdated modules
2. All syntax errors — indentation, declarations, line termination, invalid decorators, etc.

Use `<audit-start>` and `<audit-end>` tags.
Return:
- File name
- Line number
- Error type and exact code line
- A short reason why the error exists

Do not fix anything yet. Await plan approval.

==== PHASE 2: FIX PLAN ====
Wrap plan in `<plan-start>` and `<plan-end>`.
For each issue:
- State fix strategy (e.g., "Replace `from .utils` with absolute path")
- List risks (e.g., "This module is imported by 3 others")
- Group related changes as Checkpoint Blocks

==== PHASE 3: FIX EXECUTION ====
Only after plan approval.
Wrap changes in `<fix-start>`...`<fix-end>` tags.
Fix ONLY syntax or import errors.
Do NOT change any logic, add print statements, or apply temporary bypasses.

==== PHASE 4: RULE COMPLIANCE CHECKLIST ====
Answer each:
- [ ] Did you avoid monkey patches?
- [ ] Did you preserve command behavior?
- [ ] Did you introduce any try/except-pass patterns?
- [ ] Did you only fix syntax/imports?
- [ ] Did you comply with all 11 rules?

If any answer is "no", return:
`CONSTRAINT VIOLATION — FIX INVALID`

If the task cannot be completed without breaking these rules, return:
`CONSTRAINT ESCALATION REQUIRED`

=== END OF ORDER ===